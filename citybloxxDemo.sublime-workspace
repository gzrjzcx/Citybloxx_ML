{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"com",
				"comboScoreText\tText"
			],
			[
				"waitfor",
				"WaitForSeconds(float seconds)\tWaitForSeconds(float seconds)"
			],
			[
				"t",
				"text\tstring"
			],
			[
				"ist",
				"isTimerEnd\tbool"
			],
			[
				"ac",
				"activeSelf\tbool"
			],
			[
				"is",
				"isTimerStart\tbool"
			],
			[
				"ti",
				"timerOffset\tfloat"
			],
			[
				"oncom",
				"OnComboTimingComplete()\tvoid"
			],
			[
				"Tim",
				"Timer\tTimer"
			],
			[
				"istim",
				"isTiming\tbool"
			],
			[
				"isti",
				"isTiming\tbool"
			],
			[
				"isTI",
				"isTimerStart\tbool"
			],
			[
				"tetarge",
				"timerTarget_\tfloat"
			],
			[
				"isre",
				"isRepeate_\tbool"
			],
			[
				"isI",
				"isIgnoreTimeScale_\tbool"
			],
			[
				"up",
				"updateEvent_\tUpdateEvent"
			],
			[
				"upd",
				"updateEvent_\tUpdateEvent"
			],
			[
				"ontim",
				"onTimerCompleted_\tCompleteEvent"
			],
			[
				"time",
				"timerTarget\tfloat"
			],
			[
				"Time",
				"Time_\tfloat"
			],
			[
				"istime",
				"isTimerStart\tbool"
			],
			[
				"clam",
				"Clamp(float value, float min, float max)\tfloat"
			],
			[
				"cheiffa",
				"checkFallenSide(float deltaX)\tvoid"
			],
			[
				"ve",
				"Vector3\tVector3"
			],
			[
				"tr",
				"true\ttrue"
			],
			[
				"sta",
				"stackStatus\tstackStatus"
			],
			[
				"del",
				"deltaX\tfloat"
			],
			[
				"check",
				"CheckFirstPieceIfStacked()\tvoid"
			],
			[
				"ot",
				"otherCollider\tCollider2D"
			],
			[
				"gam",
				"GameControl\tGameControl"
			],
			[
				"scne",
				"SceneManager\tSceneManager"
			],
			[
				"mis",
				"missNum\tint"
			],
			[
				"si",
				"Sin(float f)\tfloat"
			],
			[
				"bo",
				"bottomRight\tVector3"
			],
			[
				"tra",
				"Translate(Vector3 translation)\tvoid"
			],
			[
				"get",
				"GetContact(int index)\tContactPoint2D"
			],
			[
				"collisi",
				"Collision2D\tCollision2D"
			],
			[
				"con",
				"contactCount\tint"
			],
			[
				"l",
				"Log(object message, Object context)\tvoid"
			],
			[
				"pos",
				"posSkyObj_1\tVector3"
			],
			[
				"po",
				"posSkyObj_2\tVector3"
			],
			[
				"sky",
				"skyObj_2\tGameObject"
			],
			[
				"getc",
				"GetComponent<T>()\tT"
			],
			[
				"Scmo",
				"ScreenMoveUp()\tvoid"
			],
			[
				"ro",
				"rotation\tQuaternion"
			],
			[
				"piece",
				"pieceObj\tPiece"
			],
			[
				"am",
				"amplitudeRotate\tfloat"
			],
			[
				"fix",
				"fixedDeltaTime\tfloat"
			],
			[
				"an",
				"angularVelocity\tfloat"
			],
			[
				"mat",
				"Mathf\tMathf"
			],
			[
				"rota",
				"rotateY\tfloat"
			],
			[
				"Math",
				"Mathf()\tMathf()"
			],
			[
				"V",
				"Vector3()\tVector3()"
			],
			[
				"vec",
				"Vector3\tVector3"
			],
			[
				"vel",
				"velocityThreshold"
			],
			[
				"co",
				"columnMaxY"
			],
			[
				"colu",
				"columnMaxY"
			],
			[
				"spa",
				"spawnInterval"
			],
			[
				"col",
				"columns"
			],
			[
				"T",
				"scoreText"
			],
			[
				"grou",
				"groundHLeangth"
			],
			[
				"gro",
				"groundOffset"
			],
			[
				"gr",
				"groundCollider"
			],
			[
				"game",
				"gameOver"
			],
			[
				"Game",
				"GameObject"
			],
			[
				"G",
				"GetComponent"
			],
			[
				"qop",
				"qopt-report"
			],
			[
				"sum",
				"sum3"
			],
			[
				"N",
				"Nbody"
			],
			[
				"de",
				"delta_pos"
			],
			[
				"te",
				"tempz"
			],
			[
				"tem",
				"tempy"
			],
			[
				"j",
				"j_total_force"
			],
			[
				"coll",
				"collisions"
			],
			[
				"ma",
				"mass"
			],
			[
				"f",
				"f"
			],
			[
				"r",
				"r"
			],
			[
				"O",
				"OBJ"
			],
			[
				"M",
				"MD"
			],
			[
				"B",
				"BIN"
			],
			[
				"MD",
				"MDOUTDIR"
			],
			[
				"MDOUTDI",
				"MDOUTDIR"
			],
			[
				"MDO",
				"MDOUT"
			],
			[
				"md",
				"MD"
			],
			[
				"ex",
				"EXEC"
			],
			[
				"E",
				"EXECPATH"
			],
			[
				"bin",
				"BIN"
			],
			[
				"in",
				"input"
			],
			[
				"exec",
				"exec_settings"
			],
			[
				"file",
				"file_name"
			],
			[
				"bash",
				"bash_profile"
			],
			[
				"if",
				"is_flag"
			],
			[
				"int",
				"int2str"
			],
			[
				"bes",
				"best_action"
			],
			[
				"act",
				"action"
			],
			[
				"k",
				"KICK"
			],
			[
				"set",
				"setExperience"
			],
			[
				"learn",
				"learn_target"
			],
			[
				"s",
				"self"
			],
			[
				"lea",
				"learningRate"
			],
			[
				"re",
				"reverse"
			],
			[
				"sa",
				"sa_list"
			],
			[
				"A",
				"ACTION"
			],
			[
				"p",
				"policy"
			],
			[
				"pl",
				"plot_pie"
			],
			[
				"R",
				"RESULT_PATH"
			],
			[
				"PA",
				"PATCHING_ARGS"
			],
			[
				"pa",
				"patching_args"
			],
			[
				"str",
				"struct\tstruct"
			],
			[
				"c",
				"count"
			],
			[
				"st",
				"str_len"
			],
			[
				"i",
				"i_str"
			],
			[
				"o",
				"out"
			],
			[
				"oU",
				"OUTPUTS"
			],
			[
				"di",
				"dilation_patch_size"
			],
			[
				"dil",
				"dilation_patch_size"
			],
			[
				"im",
				"image_num"
			],
			[
				"la",
				"labels"
			],
			[
				"len",
				"length"
			],
			[
				"le",
				"length"
			],
			[
				"lab",
				"label"
			],
			[
				"pat",
				"patchs"
			],
			[
				"mlp",
				"mlp2019"
			],
			[
				"ta",
				"train_list"
			],
			[
				"y",
				"y"
			],
			[
				"x",
				"X_test_2"
			],
			[
				"xt",
				"X_train_2"
			],
			[
				"X",
				"X_train"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ColumnSwinging : MonoBehaviour\n{\n\n\tpublic int totalStacked;\n\tpublic float swingSpeed;\n\tpublic float maxAngle;\n\tpublic int swinger;\n\n\tpublic float amplitudeMove = 0.5f;\n\tpublic float amplitudeRotate = 1f;\n\n\tpublic Rigidbody2D rb2d;\n\n\tprivate float maxSwingingAngle = 5f;\n\tprivate float minSwingingAngle = -5f;\n\tprivate float angle;\n\tprivate Vector3 pos;\n\n\tint stackPlacement;\n\tbool rotateRight;\n\n\tvoid Start()\n\t{\n\t\tangle = 0;\n\t\trb2d = GetComponent<Rigidbody2D>();\n\t}\n\n\tvoid FixedUpdate()\n\t{\n\t\tif(!GameControl.instance.isGameOver && GameControl.instance.isFirstPieceStacked)\n\t\t{\n\t\t\t// transform.position = new Vector3(Mathf.PingPong(Time.time*speed, 2), transform.position.y, transform.position.z);\n\t\t\trb2d.velocity = new Vector2(Mathf.Cos(Time.time)*amplitudeMove, 0);\n\t\t\t// transform.position = new Vector3(Mathf.Cos(Time.time)*amplitudeMove, transform.position.y, transform.position.z);\n\t\t\ttransform.rotation = Quaternion.Euler(0,0,-Mathf.Sin(Time.time)*amplitudeRotate);\n\t\t\tDebug.DrawLine (new Vector3(0,-30,0), new Vector3(0,30,0),Color.red);\n\t\t\tDebug.DrawLine (new Vector3(transform.position.x,-30,0), new Vector3(transform.position.x,30,0),Color.yellow);\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\trb2d.velocity = Vector2.zero;\n\t\t}\n\t}\n\n\tpublic void getAmplitudeMove()\n\t{\n\t\t\n\t}\n}\n",
			"file": "Assets/Scripts/ColumnSwinging.cs",
			"file_size": 1411,
			"file_write_time": 132040640985228315,
			"settings":
			{
				"buffer_size": 1355,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class GameControl : MonoBehaviour\n{\n\n\tpublic static GameControl instance;\n\n\tpublic PiecePool piecePoolObj;\n    public ColumnSwinging columnObj;\n    public ScreenMoveUp screenMoveUpObj;\n    public EllipticalOrbit slingObj;\n    public StackingEffect stackingEffectObj;\n\n    public Text scoreText;\n    public Text missText;\n    public Text comboNumText;\n    public Text comboScoreText;\n    public GameObject gameOverText;\n    public GameObject columnGameObj;\n    public Slider comboSlider;\n    public Timer comboTimer;\n\n    public bool isFirstPieceStacked = false;\n    public bool isGameOver = false;\n\n    public int populationScore = 0;\n    public int stackedPieceNum = 0;\n    public int missNum = 0;\n    public int comboNum = 0;\n\n\t// public bool \n\n    // Start is called before the first frame update\n    void Awake()\n    {\n        if(!instance)\n        {\n        \tinstance = this;\n        }else if(instance)\n        {\n        \tDestroy(gameObject);\n        }\n    }\n\n    void Start()\n    {\n        comboTimer = Timer.createTimer(\"ComboTimer\");\n    }\n\n    void Update()\n    {\n        if(isGameOver && Input.GetKeyDown(\"space\"))\n        {\n            SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n        }\n    }\n\n    public void OnPieceStacking()\n    {\n        PieceStacked();\n    }\n\n    public void AfterPieceStackingSuccessfully(bool isDeadCenter)\n    {\n        CheckFirstPieceIfStacked();\n        Scored();\n        ScreenMoveUp();\n        if(isDeadCenter)\n            Combo();\n    }\n\n    public void AfterPieceStackingFailed(int fallenSide)\n    {\n        Missed();\n        CheckMissNum();\n    }\n\n    void PieceStacked()\n    {\n    \tpiecePoolObj.HookNewPiece();\n    }\n\n    void Scored()\n    {\n        stackedPieceNum++;\n        scoreText.text = \"Score:\" + stackedPieceNum.ToString();\n    }\n\n    void Missed()\n    {\n        missNum++;\n        missText.text = \"Miss:\" + missNum.ToString();\n    }\n\n    void CheckMissNum()\n    {\n        if(missNum > 2)\n        {\n            isGameOver = true;\n            gameOverText.SetActive(true);\n        }\n    }\n\n    void ScreenMoveUp()\n    {\n        screenMoveUpObj.MoveUp();\n    }\n\n    public void Combo()\n    {\n        comboNum++;\n        comboNumText.text = \"X \" + comboNum.ToString();\n        comboSlider.gameObject.SetActive(true);\n        if(comboTimer.isTiming)\n        {\n            comboTimer.RestartTimerForCombo();\n        }\n        else\n            comboTimer.startTiming(5, OnComboTimingComplete, OnComboTimingProcess, true, false, false);\n    }\n\n    void OnComboTimingComplete()\n    {\n        comboSlider.gameObject.SetActive(false);\n        comboScored();\n        comboNum = 0;\n    }\n\n    void OnComboTimingProcess(float p)\n    {\n        comboSlider.value = 1 - p;\n        //Debug.Log(\"combo timing process\" + p);\n    }\n\n    void comboScored()\n    {\n        comboScoreText.gameObject.SetActive(true);\n        int comboScore = comboNum * 3;\n        comboScoreText.text = \"+ \" + comboScore.ToString(); \n        stackedPieceNum += comboScore;\n        scoreText.text = \"Score:\" + stackedPieceNum.ToString();\n        Invoke(\"delayInactiveComboScoreText\", 2);\n    }\n\n    void delayInactiveComboScoreText()\n    {\n        comboScoreText.gameObject.SetActive(false);\n    }\n\n    void CheckFirstPieceIfStacked()\n    {\n        if(!isFirstPieceStacked)\n        {\n            isFirstPieceStacked = true;\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n",
			"file": "Assets/Scripts/GameControl.cs",
			"file_size": 3722,
			"file_write_time": 132041560285493079,
			"settings":
			{
				"buffer_size": 3540,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "Assets/Scripts/PiecePool.cs",
			"settings":
			{
				"buffer_size": 1399,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class Piece : MonoBehaviour\n{\n\n    public struct StackStatus\n    {\n        public bool isStackSuccessful;\n        public int fallenSide;\n        public bool isDeadCenter;\n    }\n    public StackStatus stackStatus;\n\n    public bool isHooked = false;\n    public bool isStacked = true;\n    public float deadCenterRange = 0.15f;\n\n\tprivate Rigidbody2D rb2d;\n\n    // Start is called before the first frame update\n    void Start()\n    {\n        rb2d = GetComponent<Rigidbody2D>();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n    \tif(isHooked)\n    \t{\n\t        if(Input.GetKeyDown(\"space\"))\n\t        {\n\t        \ttransform.parent = null;\n                Vector3 p = transform.position;\n                p.z = 0;\n                transform.position = p;\n\t        \ttransform.rotation = Quaternion.Euler(0,0,0);\n\t        \trb2d.isKinematic = false;\n\t        \tisHooked = false;\n\t        }\n    \t}\n    }\n\n    void OnCollisionEnter2D()\n    {\n        if(!isStacked)\n        {\n            GameControl.instance.OnPieceStacking();\n            rb2d.isKinematic = true;\n            rb2d.velocity = Vector3.zero;\n            parent2Column();        \n        }\n    }\n\n    void parent2Column()\n    {\n        transform.SetParent(GameControl.instance.columnObj.transform, true);\n        // set the rotation for subObject using this way\n        transform.localEulerAngles = Vector3.zero;\n        rb2d.angularVelocity = 0;\n    }\n\n    void OnCollisionExit2D(Collision2D ctl)\n    {\n        if(!isStacked && ctl.collider.gameObject.tag == \"Piece\")\n        {\n            if(checkIfCanStack(ctl))\n            {\n                stackStatus.isStackSuccessful = true;\n                GameControl.instance.AfterPieceStackingSuccessfully(stackStatus.isDeadCenter);\n            }\n            else\n            {\n                stackStatus.isStackSuccessful = false;\n                GameControl.instance.AfterPieceStackingFailed(stackStatus.fallenSide);\n                transform.position = new Vector3(0, -10f, 0);\n            }\n        }\n        isStacked = true;\n    }\n\n    private bool checkIfCanStack(Collision2D ctl)\n    {\n        float topPiecePosX = ctl.collider.transform.localPosition.x;\n        float dropPiecePosX = ctl.otherCollider.transform.localPosition.x;\n        float deltaX = dropPiecePosX - topPiecePosX;\n        float absDeltaX = Mathf.Abs(deltaX);\n        \n        if(absDeltaX < 0.5)\n        {\n            checkIfDeadCenter(absDeltaX, topPiecePosX, ctl.otherCollider);\n            Debug.Log(ctl.collider.gameObject.name + \"  \" + ctl.collider.transform.localPosition.x + \" | \" \n                + ctl.otherCollider.gameObject.name + \"  \" + ctl.otherCollider.transform.localPosition.x + \" || \" + \"drop true\");\n            return true;\n        }\n        else \n        {\n            checkFallenSide(deltaX);\n            Debug.Log(ctl.collider.gameObject.name + \"  \" + ctl.collider.transform.localPosition.x + \" | \" \n                + ctl.otherCollider.gameObject.name + \"  \" + ctl.otherCollider.transform.localPosition.x + \" || \" + \"drop false\");\n            return false;\n        }\n    }\n\n    private void checkIfDeadCenter(float absDeltaX, float topPiecePosX, Collider2D other)\n    {\n        if(absDeltaX < deadCenterRange)\n        {\n            stackStatus.isDeadCenter = true;\n            Vector3 pos = other.transform.localPosition;\n            pos.x = topPiecePosX;\n            other.transform.localPosition = pos;\n        }\n        else\n        {\n            stackStatus.isDeadCenter = false;\n        }\n    }\n\n    private void checkFallenSide(float deltaX)\n    {\n        if(deltaX > 0)\n        {\n            stackStatus.fallenSide = 1;\n        }\n        else\n        {\n            stackStatus.fallenSide = -1;\n        }\n        // Debug.Log(\"fallen side = \" + stackStatus.fallenSide);\n    }\n\n}\n",
			"file": "Assets/Scripts/Piece.cs",
			"file_size": 4025,
			"file_write_time": 132041389608279227,
			"settings":
			{
				"buffer_size": 3887,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "Assets/Scripts/Utilities/Timer.cs",
			"settings":
			{
				"buffer_size": 3798,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/EllipticalOrbit.cs",
			"settings":
			{
				"buffer_size": 1298,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"settings syn",
				"Preferences: Settings – Syntax Specific"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"sublimgdb",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"sublimegdb",
				"SublimeGDB: Start Debugging"
			],
			[
				"command",
				"Preferences: Terminal View: Palette Commands"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"oa",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Markdown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"MarkDown",
				"Set Syntax: Markdown"
			],
			[
				"markdownlivepreview",
				"MarkdownLivePreview: Edit Custom CSS File"
			],
			[
				"markdown",
				"MarkdownLivePreview: Edit Custom CSS File"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control:soda",
				"Package Control: Install Local Dependency"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 358.0,
		"history":
		[
			"c",
			"clear",
			"subl_remote_edit s1702794 cirrus-msc.epcc.ed.ac.uk",
			"subl_remote_edit . s1702794@cirrus-msc.epcc.ed.ac.uk",
			"subl_remote_edit . s1702794@cirrus-msc.epcc.ed.ac.ul",
			"subl_remote_edit ALIAS",
			"subl_remote_edit",
			"subl_remote_edit ALIAS",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"> subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			" sb_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			" subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit ALIAS, PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"subl_remote_edit",
			"subl_remote_edit ALIAS PATH_ON_REMOTE_MACHINE",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/alex/citybloxxDemo/Assets/Scripts",
		"/Users/alex/citybloxxDemo/Assets/Scripts/Utilities"
	],
	"file_history":
	[
		"/Users/alex/citybloxxDemo/Assets/Scripts/Utilities/Timer.cs",
		"/Users/alex/citybloxxDemo/Assets/Scripts/Timer.cs",
		"/Users/alex/citybloxxDemo/Assets/Scripts/ScreenMoveUp.cs",
		"/Users/alex/citybloxxDemo/Assets/Scripts/StackingEffect.cs",
		"/Users/alex/citybloxxDemo/Assets/Scripts/HingePush.cs",
		"/Users/alex/citybloxxDemo/Assets/Scripts/ForceToSwing.cs",
		"/Users/alex/citybloxxDemo/citybloxxDemo.sublime-project",
		"/Users/alex/Desktop/test.cs",
		"/Users/alex/FlappyBird/Assets/FlappyBirdStyleAssets/Scripts/ScrollingObject.cs",
		"/Users/alex/FlappyBird/Assets/FlappyBirdStyleAssets/Scripts/RepeatingBG.cs",
		"/Users/alex/FlappyBird/Assets/FlappyBirdStyleAssets/Scripts/bird.cs",
		"/Users/alex/FlappyBird/Assets/FlappyBirdStyleAssets/Scripts/GameControl.cs",
		"/Users/alex/Desktop/temp.py",
		"/Users/alex/Desktop/FB",
		"/Users/alex/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/D0B3D9B9-9DED-4374-A3E4-9A82C5161519/Edinburgh University charitable status.txt",
		"/Users/alex/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/CB257155-28D8-4FC3-B86D-8C98404FD4A0/s1702794.txt",
		"/Users/alex/Desktop/util.c",
		"/Users/alex/Desktop/cirrus/temp/MD/scripts/exp/icc_advisor.sh",
		"/Users/alex/Desktop/cirrus/temp/MD/scripts/utils/runtime_result.sh",
		"/Users/alex/Desktop/cirrus/temp/MD/scripts/utils/gprof_result.sh",
		"/Users/alex/Desktop/cirrus/temp/MD/c_test/obj/ipo_out.optrpt",
		"/Users/alex/Desktop/cirrus/temp/MD/runtime_output/baseline/baseline-O0/baseline-O0_0.txt",
		"/Users/alex/Desktop/cirrus/temp/MD/scripts/pbs/icc_advisor.pbs",
		"/Users/alex/Desktop/cirrus/temp/MD/c_test/src/coord.h",
		"/Users/alex/Desktop/cirrus/temp/MD/C/src/MD.c",
		"/Users/alex/Desktop/cirrus/temp/MD/C/Makefile",
		"/Users/alex/Desktop/cirrus/temp/MD/scripts/pbs/test.pbs",
		"/Users/alex/Desktop/cirrus/temp/MD/C/src/coord.h",
		"/Users/alex/Desktop/cirrus/temp/MD/C/src/control.c",
		"/Users/alex/Desktop/cirrus/temp/MD/Test/diff-output.c",
		"/Users/alex/Desktop/cirrus/temp/MD/bench_c.o943845",
		"/Users/alex/Desktop/cirrus/temp/MD/C/coord.h",
		"/Users/alex/Desktop/cirrus/temp/MD/C/MD.c",
		"/Users/alex/Desktop/cirrus/temp/MD/C/control.c",
		"/Users/alex/Desktop/cirrus/temp/MD/C/output.dat100",
		"/Users/alex/Desktop/cirrus/temp/MD/C/output.dat010",
		"/Users/alex/Desktop/cirrus/temp/MD/C/input.dat",
		"/Users/alex/Desktop/cirrus/temp/MD/C/profile_O0.txt",
		"/Users/alex/project_templete/src/main.c",
		"/Users/alex/Library/Application Support/Sublime Text 3/Packages/User/SublimeGDB.sublime-settings",
		"/Users/alex/Desktop/cirrus/temp/MD/report_words.md",
		"/Users/alex/Desktop/cirrus/.bash_profile",
		"/Users/alex/Desktop/cirrus/temp/MD/C/util.c",
		"/Users/alex/Desktop/cirrus/temp/MD/bench_c.pbs",
		"/Users/alex/Desktop/cirrus/temp/TP/cw2/backend.pbs",
		"/Users/alex/Desktop/cirrus/temp/MPI/cw/mppcw/cw/backend.pbs",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise4/IndependentQLearning/IndependentQLearning.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise3/Environment.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/DataInput.csv",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/RandomAgentExample/DiscretizedRandomAttackingController.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/MonteCarloBase.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/MonteCarlo.sh",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/QLearning/QLearningBase.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/MonteCarlo/UnitTestExample/ExampleUnitTest.py",
		"/Users/alex/Desktop/MonteCarloBase.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/DiscreteHFO/HFOAttackingPlayer.py",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/MonteCarlo/MonteCarlo.sh",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise2/MonteCarlo/MonteCarloBase.py",
		"/Users/alex/Desktop/cirrus/.bashrc",
		"/Users/alex/Desktop/HFO/example/RL2019-BaseCodes/Exercise1/BellmanDPBase.py",
		"/Users/alex/Desktop/plot.py",
		"/Users/alex/Downloads/10.1007_978-3-642-27645-3_17.ris",
		"/Users/alex/Downloads/citation-265284198.txt",
		"/Users/alex/Downloads/S0747563216300188.txt",
		"/Users/alex/Downloads/S0747563216300188.ris",
		"/Users/alex/Downloads/CitationList.ris",
		"/Users/alex/Desktop/test_submit.sh",
		"/Users/alex/Downloads/alex_latex.txt",
		"/Users/alex/Downloads/10.1007_978-3-319-93000-8_81 (1).bib",
		"/Users/alex/Downloads/alex.txt",
		"/Users/alex/Desktop/mlp2019/src/builder.py",
		"/Users/alex/Desktop/mlp2019/mkfold/dsfold1.txt",
		"/Users/alex/Downloads/10.1007_978-3-319-93000-8_81.bib",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/scripts/acc.sh",
		"/Users/alex/Desktop/mlp_cluster/mlpractical/arg_extractor.py",
		"/Users/alex/Desktop/mlp_temp/irnv2_combo_all.sh",
		"/Users/alex/Desktop/mlp_temp/irnv2_patching_phase2.sh",
		"/Users/alex/Desktop/irnv2_combo_all.sh",
		"/Users/alex/Desktop/mlp2019/mkfold/mkfold.py",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/scripts/submit.sh",
		"/Users/alex/Desktop/install.sh",
		"/Users/alex/Downloads/irnv2_patching_phase2.sh",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/src/data_handler.py",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/scripts/test_submit.sh",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/slurm-301961.out",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/test_submit.sh",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/src/preprocessing.py",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/scripts/experiments/sliding_stride.sh",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/scripts/experiments/sliding_dilation.sh",
		"/Users/alex/Desktop/mlp2019/patch_test/dump1.txt",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/slurm-301526.out",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/slurm-301531.out",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/src/builder.py",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/src/test.py",
		"/Users/alex/Desktop/mlp2019/src/data_handler.py",
		"/Users/alex/Desktop/mlp2019/src/plots.py",
		"/Users/alex/Desktop/mlp2019/data/fold1/X_train.pickle",
		"/Users/alex/Desktop/mlp2019/src/arg_extractor.py",
		"/Users/alex/Desktop/mlp2019/log.txt",
		"/Users/alex/Desktop/mlp2019/src/utilities.py",
		"/Users/alex/Desktop/draft.md",
		"/Users/alex/Desktop/project_templete/includes/resource.h",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/data/fold1/X_test.pickle",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/slurm-289048.out",
		"/Users/alex/Desktop/mlp_cluster/mlp2019/src/baseline.py",
		"/Users/alex/.zim/modules/custom/functions/from keras.layers import Dense",
		"/Users/alex/.config/karabiner/assets/complex_modifications/1546877051.json",
		"/Users/alex/Documents/gitRepo/performance_programming/MD/C/util.c",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/腾讯天美-游戏客户端开发一面.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/dot-operator-Vs-arrow-operator.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/reference-Vs-pointer.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/pass-parameters-in-function.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/c-preprocess.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/charPointer-VS-charArray.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/subposts_c/c-memory-layout.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/c-memory-layout.md",
		"/Users/alex/Desktop/test.c",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/_config.yml",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/themes/next/source/css/_schemes/Mist/_logo.styl",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/themes/next/layout/_custom/head.swig",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/themes/next/layout/index.swig",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/subposts/switch_lamps.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/Directory.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/themes/next/_config.yml",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/blogs/Interview-Tencent.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/blog/source/_posts/Interview-Tencent.md",
		"/Users/alex/Documents/gitRepo/gzrjzcx.github.io/.git/config",
		"/Users/alex/Documents/blog/_config.yml"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 129.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"isFirstPieceStacked",
			"timerStart",
			"angle",
			"stackStatus",
			"MoveUp",
			"toppieceidx",
			"currentPiece",
			"currentPieceTag",
			"currentPiece",
			"pos"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"timerStartTime",
			"currentPieceIdx",
			"currentPiece",
			"currentPieceTag"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/ColumnSwinging.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1355,
						"regions":
						{
						},
						"selection":
						[
							[
								664,
								664
							]
						],
						"settings":
						{
							"in_converting": true,
							"is_init_dirty_state": false,
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"26,31": "不需要的 using 指令。",
								"588,589": "运算符“&&”无法应用于“bool”和“int”类型的操作数"
							},
							"origin_content": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ColumnSwinging : MonoBehaviour\n{\n\n\tpublic int totalStacked;\n\tpublic float swingSpeed;\n\tpublic float maxAngle;\n\tpublic int swinger;\n\n\tpublic Rigidbody2D rb2d;\n\n\tprivate float maxSwingingAngle = 5f;\n\tprivate float minSwingingAngle = -5f;\n\tprivate float angle;\n\tprivate Vector3 pos;\n\tprivate float speed = 0.03f;\n\n\tint stackPlacement;\n\tbool rotateRight;\n\n\tvoid Start()\n\t{\n\t\tangle = 0;\n\t\trb2d = GetComponent<Rigidbody2D>();\n\t}\n\n\tvoid FixedUpdate()\n\t{\n\t\t// angle += Time.fixedDeltaTime * 0.1f;\n\t\t// Vector3 posX = transform.position.x * Mathf.Cos(angle);\n\t\tpos = transform.position;\n\t\tif(transform.position.x > -2 && transform.position.x < 0)\n\t\t{\t\n\t\t\tspeed += 0.01f * Time.fixedDeltaTime;\n\t\t\tpos.x -= speed;\n\t\t\ttransform.position = pos;\n\t\t}\n\t\telse if(transform.position.x >= 0 && transform.position.x < 2)\n\t\t{\n\t\t\tDebug.Log(Time.fixedDeltaTime);\n\t\t\tspeed -= 0.01f * Time.fixedDeltaTime;\n\t\t\tpos.x += speed;\n\t\t\ttransform.position = pos;\n\t\t}\n\t}\n}\n",
							"origin_encoding": "UTF-8-SIG",
							"revert_to_scratch": true,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/GameControl.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3540,
						"regions":
						{
						},
						"selection":
						[
							[
								2791,
								2791
							]
						],
						"settings":
						{
							"in_converting": true,
							"is_init_dirty_state": false,
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"26,31": "不需要的 using 指令。",
								"3259,3272": "未能找到类型或命名空间名“MethodInvoker”(是否缺少 using 指令或程序集引用?)"
							},
							"origin_content": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class GameControl : MonoBehaviour\n{\n\n\tpublic static GameControl instance;\n\n\tpublic PiecePool piecePoolObj;\n    public ColumnSwinging columnObj;\n\n    public int populationScore = 0;\n    public int stackedPieceNum = 0;\n\n\t// public bool \n\n    // Start is called before the first frame update\n    void Awake()\n    {\n        if(!instance)\n        {\n        \tinstance = this;\n        }else if(instance)\n        {\n        \tDestroy(gameObject);\n        }\n    }\n\n    public void OnPieceStacking()\n    {\n        PieceStacked();\n        Score();\n    }\n\n    void PieceStacked()\n    {\n    \tpiecePoolObj.HookNewPiece();\n    }\n\n    void Score()\n    {\n        stackedPieceNum++;\n    }\n\n    public int getStackedPiecesNum()\n    {\n        return stackedPieceNum;\n    }\n}\n",
							"origin_encoding": "UTF-8-SIG",
							"revert_to_scratch": true,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2734.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/PiecePool.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1399,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								278
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"1299,1314": "当前上下文中不存在名称“currentPieceIdx”",
								"1329,1344": "当前上下文中不存在名称“currentPieceIdx”",
								"1375,1390": "当前上下文中不存在名称“currentPieceIdx”",
								"26,31": "不需要的 using 指令。",
								"886,901": "当前上下文中不存在名称“currentPieceIdx”"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Assets/Scripts/Piece.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3887,
						"regions":
						{
						},
						"selection":
						[
							[
								2018,
								2018
							]
						],
						"settings":
						{
							"in_converting": true,
							"is_init_dirty_state": false,
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"26,31": "不需要的 using 指令。",
								"2839,2844": "表达式项“float”无效",
								"2845,2851": "语法错误，应输入“,”"
							},
							"origin_content": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class Piece : MonoBehaviour\n{\n\n\tpublic float downForce = 200f;\n    public bool isHooked = false;\n    public bool isStacked = true;\n    private bool stackStatus = true;\n\n\tprivate Rigidbody2D rb2d;\n\n    // Start is called before the first frame update\n    void Start()\n    {\n        rb2d = GetComponent<Rigidbody2D>();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n    \tif(isHooked)\n    \t{\n\t        if(Input.GetKeyDown(\"space\"))\n\t        {\n\t        \ttransform.parent = null;\n                Vector3 p = transform.position;\n                p.z = 0;\n                transform.position = p;\n\t        \ttransform.rotation = Quaternion.Euler(0,0,0);\n\t        \trb2d.isKinematic = false;\n\t        \tisHooked = false;\n\t        }\n    \t}\n\n        if(!stackStatus)\n        {\n            int angle = 90;\n            rb2d.velocity = new Vector2(Mathf.Sin(angle) * 5f, Mathf.Sin(angle) * 5f);\n        }\n    }\n\n    void OnCollisionEnter2D()\n    {\n        if(!isStacked)\n        {\n            GameControl.instance.OnPieceStacking();\n            rb2d.isKinematic = true;\n            rb2d.velocity = Vector3.zero;\n            parent2Column();        \n        }\n    }\n\n    void parent2Column()\n    {\n        transform.SetParent(GameControl.instance.columnObj.transform, true);\n        // set the rotation for subObject using this way\n        transform.localEulerAngles = Vector3.zero;\n        rb2d.angularVelocity = 0;\n    }\n\n    void OnCollisionExit2D(Collision2D ctl)\n    {\n        if(!isStacked)\n        {\n            if(checkIfCanStack(ctl))\n            {\n                stackStatus = true;\n            }\n            else\n            {\n                stackStatus = false;\n            }\n        }\n        isStacked = true;\n    }\n\n    private bool checkIfCanStack(Collision2D ctl)\n    {\n\n        if(Mathf.Abs(ctl.collider.transform.localPosition.x - ctl.otherCollider.transform.localPosition.x) < 0.5)\n        {\n            // Debug.Log(ctl.collider.gameObject.name + \"  \" + ctl.collider.transform.localPosition.x);\n            // Debug.Log(ctl.otherCollider.gameObject.name +\"  \" + ctl.otherCollider.transform.localPosition.x);\n            Debug.Log(ctl.collider.gameObject.name + \"  \" + ctl.collider.transform.localPosition.x + \" | \" \n                + ctl.otherCollider.gameObject.name + \"  \" + ctl.otherCollider.transform.localPosition.x + \" || \" + \"drop true\");\n            return true;\n        }\n        else \n        {\n            Debug.Log(ctl.collider.gameObject.name + \"  \" + ctl.collider.transform.localPosition.x + \" | \" \n                + ctl.otherCollider.gameObject.name + \"  \" + ctl.otherCollider.transform.localPosition.x + \" || \" + \"drop false\");\n            return false;\n        }\n    }\n\n\n\n}\n",
							"origin_encoding": "UTF-8-SIG",
							"revert_to_scratch": true,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 574.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/Scripts/Utilities/Timer.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3798,
						"regions":
						{
						},
						"selection":
						[
							[
								2069,
								2069
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"101,114": "命名空间“<global namespace>”已经包含“CompleteEvent”的定义",
								"1049,1060": "在“Timer.updateEvent”和“Timer.updateEvent”之间具有二义性",
								"1080,1105": "在“Timer.isTimerDestoryAfterTiming”和“Timer.isTimerDestoryAfterTiming”之间具有二义性",
								"1122,1139": "在“Timer.isIgnoreTimeScale”和“Timer.isIgnoreTimeScale”之间具有二义性",
								"1164,1173": "在“Timer.isRepeate”和“Timer.isRepeate”之间具有二义性",
								"1191,1205": "在“Timer.timerStartTime”和“Timer.timerStartTime”之间具有二义性",
								"1208,1213": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"1217,1228": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"1236,1248": "在“Timer.isTimerStart”和“Timer.isTimerStart”之间具有二义性",
								"1259,1267": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"1342,1353": "类型“Timer”已定义了一个名为“createTimer”的具有相同参数类型的成员",
								"139,150": "命名空间“<global namespace>”已经包含“UpdateEvent”的定义",
								"1538,1544": "类型“Timer”已定义了一个名为“Update”的具有相同参数类型的成员",
								"1564,1572": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"1593,1600": "在“Timer.nowTime”和“Timer.nowTime”之间具有二义性",
								"1603,1608": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"1611,1622": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"1633,1636": "在“Timer.now”和“Timer.now”之间具有二义性",
								"1639,1646": "在“Timer.nowTime”和“Timer.nowTime”之间具有二义性",
								"1649,1663": "在“Timer.timerStartTime”和“Timer.timerStartTime”之间具有二义性",
								"1678,1689": "在“Timer.updateEvent”和“Timer.updateEvent”之间具有二义性",
								"1720,1731": "不可调用的成员“Timer.updateEvent”不能像方法一样使用。",
								"1746,1749": "在“Timer.now”和“Timer.now”之间具有二义性",
								"175,180": "命名空间“<global namespace>”已经包含“Timer”的定义",
								"1750,1761": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"1788,1791": "在“Timer.now”和“Timer.now”之间具有二义性",
								"1794,1805": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"1831,1847": "在“Timer.onTimerCompleted”和“Timer.onTimerCompleted”之间具有二义性",
								"1868,1884": "不可调用的成员“Timer.onTimerCompleted”不能像方法一样使用。",
								"1907,1916": "在“Timer.isRepeate”和“Timer.isRepeate”之间具有二义性",
								"1938,1950": "以下方法或属性之间的调用具有二义性:“Timer.RestartTimer()”和“Timer.RestartTimer()”",
								"1967,1992": "在“Timer.isTimerDestoryAfterTiming”和“Timer.isTimerDestoryAfterTiming”之间具有二义性",
								"2005,2012": "以下方法或属性之间的调用具有二义性:“Timer.Destroy()”和“Timer.Destroy()”",
								"2061,2072": "类型“Timer”已定义了一个名为“GetLeftTime”的具有相同参数类型的成员",
								"2105,2116": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"2119,2122": "在“Timer.now”和“Timer.now”之间具有二义性",
								"2127,2138": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"2157,2175": "类型“Timer”已定义了一个名为“OnApplicationPause”的具有相同参数类型的成员",
								"2221,2231": "以下方法或属性之间的调用具有二义性:“Timer.PauseTimer()”和“Timer.PauseTimer()”",
								"2251,2264": "以下方法或属性之间的调用具有二义性:“Timer.ContinueTimer()”和“Timer.ContinueTimer()”",
								"2291,2301": "类型“Timer”已定义了一个名为“PauseTimer”的具有相同参数类型的成员",
								"2322,2332": "在“Timer.isTimerEnd”和“Timer.isTimerEnd”之间具有二义性",
								"2360,2365": "在“Timer.isLog”和“Timer.isLog”之间具有二义性",
								"2461,2469": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"2491,2502": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"2505,2510": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"2545,2558": "类型“Timer”已定义了一个名为“ContinueTimer”的具有相同参数类型的成员",
								"2579,2589": "在“Timer.isTimerEnd”和“Timer.isTimerEnd”之间具有二义性",
								"26,31": "不需要的 using 指令。",
								"2617,2622": "在“Timer.isLog”和“Timer.isLog”之间具有二义性",
								"2726,2734": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"2766,2777": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"2780,2785": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"2788,2799": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"2817,2825": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"2881,2893": "类型“Timer”已定义了一个名为“RestartTimer”的具有相同参数类型的成员",
								"2907,2921": "在“Timer.timerStartTime”和“Timer.timerStartTime”之间具有二义性",
								"2924,2929": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"2936,2947": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"2961,2973": "在“Timer.isTimerStart”和“Timer.isTimerStart”之间具有二义性",
								"2990,2998": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"3212,3226": "在“Timer.timerStartTime”和“Timer.timerStartTime”之间具有二义性",
								"3229,3234": "在“Timer.Time_”和“Timer.Time_”之间具有二义性",
								"3244,3255": "在“Timer.timerOffset”和“Timer.timerOffset”之间具有二义性",
								"3269,3281": "在“Timer.isTimerStart”和“Timer.isTimerStart”之间具有二义性",
								"3298,3306": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"3338,3357": "类型“Timer”已定义了一个名为“increaseTimerTarget”的具有相同参数类型的成员",
								"3392,3403": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"3447,3454": "类型“Timer”已定义了一个名为“Destroy”的具有相同参数类型的成员",
								"3468,3480": "在“Timer.isTimerStart”和“Timer.isTimerStart”之间具有二义性",
								"3495,3503": "在“Timer.isTiming”和“Timer.isTiming”之间具有二义性",
								"3518,3528": "在“Timer.isTimerEnd”和“Timer.isTimerEnd”之间具有二义性",
								"3545,3570": "在“Timer.isTimerDestoryAfterTiming”和“Timer.isTimerDestoryAfterTiming”之间具有二义性",
								"655,672": "在“Timer.isIgnoreTimeScale”和“Timer.isIgnoreTimeScale”之间具有二义性",
								"732,743": "类型“Timer”已定义了一个名为“startTiming”的具有相同参数类型的成员",
								"918,929": "在“Timer.timerTarget”和“Timer.timerTarget”之间具有二义性",
								"981,997": "在“Timer.onTimerCompleted”和“Timer.onTimerCompleted”之间具有二义性"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1282.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/Scripts/EllipticalOrbit.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1298,
						"regions":
						{
						},
						"selection":
						[
							[
								723,
								723
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"oops":
							{
								"0,5": "不需要的 using 指令。",
								"1020,1021": "应输入 ;",
								"26,31": "不需要的 using 指令。"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.586370677931,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 157.0
	},
	"pinned_build_system": "",
	"project": "citybloxxDemo.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Remote Edit: Open Remote File Prompt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 184.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
